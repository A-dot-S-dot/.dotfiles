global !p
from my_snippet_helpers import math
endglobal

# Content
# - Header
# - Text
# 	- Structure
# 	- Enviornments
# 	- Math
# 	- Theorem, Proofs, etc.
# 	- Citations and references
# 	- Markup
# 	- Miscellaneous
# - Math
# 	- Letters
# 	- Constructs and accents
# 	- Delimiters
# 	- Variable-sized symbols
# 	- Function Names
# 	- Binary Operation
# 	- Arrow Symbols
# 	- Sub- and Subscript
# 	- Styles
# 	- Miscellaneous

###############################################################################
# Header
###############################################################################
snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet op "math operator" w
\DeclareMathOperator{\\$1}{${2:$1}}
endsnippet

snippet com "command" w
\newcommand{\\$1}{$2}
endsnippet

snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[${1:german}]{babel}
\usepackage{xcolor}
\usepackage{amsmath, amssymb, amsthm}
\usepackage{mathtools}
\usepackage{cleveref}
\usepackage{bbm}

\mathtoolsset{showonlyrefs}

\newtheorem{theorem}{Theorem}
\newtheorem{lemma}[theorem]{Lemma}
\newtheorem{proposition}[theorem]{Proposition}
\newtheorem{corollary}[theorem]{Korollar}

\theoremstyle{definition}
\newtheorem{definition}[theorem]{Definition}
\newtheorem{remark}[theorem]{Remark}

\begin{document}
$0
\end{document}
endsnippet

snippet letter "Letter template" b
\documentclass[foldmarks=false, firsthead=false]{scrlttr2}
\usepackage{hyperref}
\usepackage[german]{babel}
\author{Alexey Schwarzmann}
\date{\today}
\hypersetup{
pdfauthor={Alexey Schwarzmann},
pdftitle={},
pdfkeywords={},
pdfsubject={}
}
\usepackage{biblatex}

\begin{document}
\setkomavar{subject}{$1}
\setkomavar{signature}{${2:Alexey Schwarzmann}}
\setkomavar{fromname}{Alexey Schwarzmann}
\setkomavar{fromaddress}{Cäcilienstr. 6\ 58452 Witten}

\opening{${3:Sehr geehrte Damen und Herren,}}

$0

\closing{${4:Mit freundlichen Grüßen,}}
\end{document}
endsnippet

###############################################################################
# Text
###############################################################################

# Structure
snippet chap "chapter" bA
\chapter{$1}
\label{sec:$2}

$0
endsnippet

priority 50
snippet sec "section" bA
\section{$1}
\label{sec:$2}

$0
endsnippet

priority 50
snippet ssec "subsection" bA
\subsection{$1}
\label{sec:$2}

$0
endsnippet

# Enviornments
snippet beg "begin{} / end{}" bA
\\begin{$1}
$0
\\end{$1}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
\centering
\caption{${2:caption}}
\label{tab:${3:label}}
\begin{tabular}{${5:c}}
$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:!htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

# Math
snippet mk "Math" wA
$${1}$$0
endsnippet

snippet dm "Math" wA
\[
	{1:${VISUAL}}${2:.}
\]$0
endsnippet

snippet ali "Align" bA
\begin{align}
	${1:${VISUAL}}${2:.}
\end{align}$0
endsnippet

snippet eq "Equation" bA
\begin{equation}
	${1:${VISUAL}}${2:.}
\end{equation}$0
endsnippet

# Theorems, Proofs, etc.
snippet thm "Theorem" b
\begin{theorem}
	$1
\end{theorem}$0
endsnippet

priority 100
snippet proof "Proof" b
\begin{proof}
	$1
\end{proof}$0
endsnippet

snippet lem "Lemma" b
\begin{lemma}
	$1
\end{lemma}$0
endsnippet

snippet def "Definition" b
\begin{definition}
	$1
\end{definition}$0
endsnippet

snippet rem "Remark" b
\begin{remark}
	$1
\end{remark}$0
endsnippet

snippet prop "Proposition" b
\begin{proposition}
	$1
\end{proposition}$0
endsnippet

snippet cor "Corollary" b
\begin{corollary}
	$1
\end{corollary}$0
endsnippet

# Citations and references
priority 100
snippet cite "cite" iA
~\cite{$1}$0
endsnippet

priority 100
snippet ref "reference" i
~\ref{$1}$0
endsnippet

priority 200
snippet eqref "equation reference" iA
~\eqref{eq:$1}$0
endsnippet

# Markup
snippet emph "emphasize" w
\emph{${1:${VISUAL}}}$0
endsnippet

# Miscellaneous
snippet todo "TODO comment" bA
% TODO $0
endsnippet

###############################################################################
# Math
###############################################################################
# Letters
priority 100
context "math()"
snippet '(?<!\\)(beta|eta|iota|mu|nu|pi|Pi|phi|Phi|psi|Psi|rho|tau|xi|zeta)' "Greek letters" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet alp "alpha" iA
\alpha
endsnippet

context "math()"
snippet del "delta" iA
\delta
endsnippet

context "math()"
snippet Del "Delta" iA
\Delta
endsnippet

context "math()"
snippet eps "epsilon" iA
\varepsilon
endsnippet

context "math()"
snippet gam "gamma" iA
\gamma
endsnippet

context "math()"
snippet Gam "Gamma" iA
\Gamma
endsnippet

context "math()"
snippet kap "kappa" iA
\kappa
endsnippet

context "math()"
snippet Lam "Lambda" iA
\Lambda
endsnippet

context "math()"
snippet lam "lambda" iA
\lambda
endsnippet

context "math()"
snippet nab "nabla" iA
\nabla
endsnippet

context "math()"
snippet om "omega" iA
\omega
endsnippet

context "math()"
snippet Om "omega" iA
\Omega
endsnippet

context "math()"
snippet vph "varphi" iA
\varphi
endsnippet

context "math()"
snippet sig "sigma" iA
\sigma
endsnippet

context "math()"
snippet Sig "sigma" iA
\Sigma
endsnippet

context "math()"
snippet the "theta" iA
\theta
endsnippet

# Math constructs and accents
context "math()"
snippet // "Fraction" iA
\\frac{${1:${VISUAL}}}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wr
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wr
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet sr "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

priority 10
context "math()"
snippet "(bar|ddot|dot|hat|ring|til)" "accents" riA
\\`!p
if match.group(1)=="til":
	snip.rv="tilde"
elif match.group(1)=="ring":
	snip.rv="mathring"
else:
	snip.rv=match.group(1)
`{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])(bar|ddot|dot|hat|ring|til)" "accents 2" riA
\\`!p
if match.group(2)=="til":
	snip.rv="widetilde"
elif match.group(2)=="ring":
	snip.rv="mathring"
else:
	snip.rv=match.group(2)
`{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "\\(hat){([a-zA-Z\\]+)}ww" "wide accents" riA
\\wide`!p snip.rv=match.group(1)+"{"+match.group(2)+"}"`
endsnippet

# Delimiters
context "math()"
snippet set "set" i
\\{${1:${VISUAL}}\\}$0
endsnippet

context "math()"
snippet abs "absolute value" iA
\lvert ${1:${VISUAL}}\rvert$0
endsnippet

priority 200
context "math()"
snippet norm "norm" iA
\lVert ${1:${VISUAL:\\cdot}}\rVert$0
endsnippet

priority 100
context "math()"
snippet sprod "scalr product" iA
\langle ${1:\cdot}, ${2:\cdot}\rangle$0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix}$0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix}$0
endsnippet

context "math()"
snippet bin "binomial" iA
\binom{${1:n}}{${2:k}} $0
endsnippet

# Variable-sized symbols
priority 10
context "math()"
snippet "(sum|prod|\\cup u|\\cap n)" "variable sized symbols" irA
\\`!p
snip.rv=match.group(1)
if match.group(1)=="\\cup u":
	snip.rv="bigcup"
elif match.group(1)=="\\cap n":
	snip.rv="bigcap"
else:
	snip.rv=match.group(1)
`_{${1:i=1}}`!p
snip.rv = "" if t[2]=="" or t[2]=="'" else "^{"
`${2:n}`!p
snip.rv = "" if t[2]=="" or t[2]=="'" else "}"
` $0
endsnippet

context "math()"
snippet int "integral" iA
\int_{${1:-\infty}}`!p
snip.rv = "" if t[2]=="" else "^{"
`${2:\infty}`!p
snip.rv = "" if t[2]=="" else "}"
` ${3:${VISUAL}}
endsnippet

context "math()"
snippet "(\\big|\\Big|\\bigg|\\Bigg|.*)\|([jk])" "auto vertical line" riA
`!p
if match.group(1) == "\\big":
	snip.rv="" if match.group(2)=="j" else "\\Big"
elif match.group(1) == "\\Big":
	snip.rv="\\big" if match.group(2)=="j" else "\\bigg"
elif match.group(1) == "\\bigg":
	snip.rv="\\Big" if match.group(2)=="j" else "\\Bigg"
elif match.group(1) == "\\Bigg":
	snip.rv="\\bigg" if match.group(2)=="j" else ""
else:
	snip.rv="\\Bigg" if match.group(2)=="j" else "\\big"
`|
endsnippet

# Standard Function Names
priority 100
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|cos|cot|csc|det|exp|inf|ln|log|max|min|perp|sin|star|sup)' "math operators" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}}
endsnippet

priority 200
context "math()"
snippet limsu "limsup" iA
\limsup_{${1:n} \to ${2:\infty}}
endsnippet

priority 200
context "math()"
snippet limin "liminf" iA
\liminf_{${1:n} \to ${2:\infty}}
endsnippet

# Binary Operation
context "math()"
snippet +- "plus minus" iA
\pm $0
endsnippet

context "math()"
snippet -+ "minus plus" iA
\mp $0
endsnippet

priority 50
context "math()"
snippet cc "subset" Ai
\subset $0
endsnippet

context "math()"
snippet nn "cap" iA
\cap $0
endsnippet

context "math()"
snippet uu "cup" iA
\cup $0
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus $0
endsnippet

priority 50
snippet !c- "not in " i
\not\in $0
endsnippet

priority 10
context "math()"
snippet c- "in " iA
\in $0
endsnippet

context "math()"
snippet && "new line in align" iA
&${1:=}$2${3:\\\\ }
endsnippet

context "math()"
snippet != "equals" iA
\neq $0
endsnippet

context "math()"
snippet == "equivalent" iA
\equiv $0
endsnippet

context "math()"
snippet ~~ "~" iA
\sim $0
endsnippet

context "math()"
snippet <= "leq" iA
\le $0
endsnippet

context "math()"
snippet >= "geq" iA
\ge $0
endsnippet

context "math()"
snippet >> ">>" iA
\gg $0
endsnippet

context "math()"
snippet << "<<" iA
\ll $0
endsnippet

context "math()"
snippet <~ "less sim" iA
\lesssim $0
endsnippet

context "math()"
snippet >~ "greater sim" iA
\gtrsim $0
endsnippet

context "math()"
snippet =~ "equal sim" iA
\cong $0
endsnippet

priority 50
context "math()"
snippet xx "cross" iA
\times $0
endsnippet

priority 100
context "math()"
snippet oxx "cross" iA
\otimes $0
endsnippet

context "math()"
snippet ** "cdot" iA
\cdot $0
endsnippet

context "math()"
snippet "\cdot *" "cdots" iA
\cdots $0
endsnippet

context "math()"
snippet oo "composition" iA
\circ $0
endsnippet

priority 100
context "math()"
snippet ... "ldots" iA
\ldots
endsnippet

context "math()"
snippet || "mid" iA
\mid $0
endsnippet

context "math()"
snippet vv "vee" iA
\vee $0
endsnippet

priority 10
context "math()"
snippet ww "wedge" iA
\wedge $0
endsnippet

# Arrow symbols
context "math()"
snippet => "implies" Ai
\implies $0
endsnippet

context "math()"
snippet =< "implied by" Ai
\impliedby $0
endsnippet

context "math()"
snippet iff "iff" i
\iff $0
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to $0
endsnippet

context "math()"
snippet "\\to ([._'^])" "to with description" irA
\xrightarrow`!p
snip.rv="[" if match.group(1) in [".", "_"] else "{"
`$1`!p
snip.rv="]" if match.group(1) in [".", "_"] else "}"
`$0
endsnippet

priority 200
context "math()"
snippet ^-> "hookrightarrow" iA
\hookrightarrow $0
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow $0
endsnippet

context "math()"
snippet |-> "mapsto" iA
\mapsto $0
endsnippet

# Super- and Subscript
priority 50
context "math()"
snippet "\.([a-zA-Z0-9\-+*\\])" "auto subscript" irA
_`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet "\.\.([^.])" "auto subscript 2" irA
_{`!p snip.rv = match.group(1)`$1}$0
endsnippet

priority 50
context "math()"
snippet "'([a-zA-Z0-9\-+*\\])" "auto superscript" irA
^`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '' "auto subscript 2" iA
^{$1}$0
endsnippet

priority 10
context "math()"
snippet "([)\]}A-Za-z])(\d)" "auto subscript for numbers" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet "([)\]}A-Za-z])_(\d\d)" "auto subscript for numbers 2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet inv "inverse" iA
^{-1}$0
endsnippet

priority 100
context "math()"
snippet ^cc "complement" iA
^{\mathrm{c}}
endsnippet

# Styles
priority 10
context "math()"
snippet "(bb|cal|frak|rm|bm)" "math styles" riA
\math`!p snip.rv=match.group(1)`{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])(bb|cal|frak|rm|bm)" "math styles 2" riA
\math`!p snip.rv=match.group(2)`{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet txt "text" iA
\text{$1}$0
endsnippet

# Miscellaneous
priority 100
context "math()"
snippet AA "for all" iA
\forall
endsnippet

priority 100
context "math()"
snippet EE "exists" iA
\exists
endsnippet

context "math()"
snippet 88 "\infty" iA
\infty
endsnippet

context "math()"
snippet o/ "emptyset" iA
\emptyset $0
endsnippet

context "math()"
snippet ee "e" iA
\e
endsnippet

context "math()"
snippet ii "i" iA
\i
endsnippet

context "math()"
snippet part "partial" iA
\partial
endsnippet

context "math()"
snippet Lap "Laplacian" iA
\Delta $0
endsnippet

priority 10
context "math()"
snippet "([A-Z])\1" "blackboard bold" riA
\mathbb{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet one "Indicator function" iA
\mathbbm{1}
endsnippet

context "math()"
snippet :: "colon" iA
\colon $0
endsnippet

priority 100
context "math()"
snippet pdev "partial derivative" iA
\frac{\partial $1}{\partial ${2:x}}
endsnippet

priority 50
context "math()"
snippet dev "d/dx" iA
\frac{\d $1}{\d ${2:x}}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

context "math()"
snippet Lp "Lp" wA
L^${1:p}`!p snip.rv = "" if t[2]=="" else "("`${2:\Omega}`!p snip.rv = "" if t[2]=="" else ")"`$0
endsnippet

# vim:ft=snippets
